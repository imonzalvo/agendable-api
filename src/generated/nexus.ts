/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./../context.js"
import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
     */
    json<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "Json";
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    dateTime<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
     */
    json<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Json";
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    dateTime<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  BookingsWhereInputType: { // input type
    from: string; // String!
    to: string; // String!
  }
  LandingInfoInputType: { // input type
    businessId: string; // String!
    cta?: string | null; // String
    description: string; // String!
    displayName: string; // String!
    facebookUrl?: string | null; // String
    imagesUrl?: string[] | null; // [String!]
    instagramUrl?: string | null; // String
    website?: string | null; // String
  }
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
  Json: any
}

export interface NexusGenObjects {
  AuthPayload: { // root type
    token?: string | null; // String
    user?: NexusGenRootTypes['User'] | null; // User
  }
  AvailabilityItem: { // root type
    day: string; // String!
    from: string; // String!
    id: string; // ID!
    to: string; // String!
  }
  Booking: { // root type
    clientEmail?: string | null; // String
    clientFamilyName?: string | null; // String
    clientName?: string | null; // String
    clientPhone?: string | null; // String
    end: string; // String!
    id: string; // ID!
    start: string; // String!
    status: string; // String!
  }
  Branch: { // root type
    address: string; // String!
    description: string; // String!
    email: string; // String!
    id: string; // ID!
    image?: string | null; // String
    name: string; // String!
    phone: string; // String!
  }
  Business: { // root type
    email: string; // String!
    facebookUrl?: string | null; // String
    handle: string; // String!
    id: string; // ID!
    instagramUrl?: string | null; // String
    name: string; // String!
    phone: string; // String!
    website?: string | null; // String
  }
  BusinessImage: { // root type
    id: string; // ID!
    url: string; // String!
  }
  Category: { // root type
    id: string; // ID!
    name: string; // String!
  }
  Employee: { // root type
    familyName: string; // String!
    givenName: string; // String!
    id: string; // ID!
    phone: string; // String!
  }
  EmployeeAvailableTime: { // root type
    from?: string | null; // String
    to?: string | null; // String
  }
  EmployeesAvailableTime: { // root type
    availability?: Array<NexusGenRootTypes['EmployeeAvailableTime'] | null> | null; // [EmployeeAvailableTime]
    id?: string | null; // String
  }
  LandingInfo: { // root type
    cta?: string | null; // String
    description: string; // String!
    displayName: string; // String!
    id: string; // ID!
  }
  Mutation: {};
  Notification: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    seen: boolean; // Boolean!
    title: string; // String!
    type: string; // String!
  }
  Post: { // root type
    content?: string | null; // String
    id: string; // ID!
    published: boolean; // Boolean!
    title: string; // String!
  }
  Query: {};
  Service: { // root type
    currency: string; // String!
    description: string; // String!
    duration: number; // Int!
    id: string; // ID!
    name: string; // String!
    price: number; // Float!
  }
  Subscription: {};
  User: { // root type
    email: string; // String!
    familyName: string; // String!
    givenName: string; // String!
    id: string; // ID!
    name?: string | null; // String
    phone?: string | null; // String
    userType: string; // String!
    verifyToken: string; // String!
  }
  VacationsItem: { // root type
    from: string; // String!
    id: string; // ID!
    to: string; // String!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  AuthPayload: { // field return type
    token: string | null; // String
    user: NexusGenRootTypes['User'] | null; // User
  }
  AvailabilityItem: { // field return type
    day: string; // String!
    employee: NexusGenRootTypes['Employee']; // Employee!
    from: string; // String!
    id: string; // ID!
    to: string; // String!
  }
  Booking: { // field return type
    branch: NexusGenRootTypes['Branch']; // Branch!
    client: NexusGenRootTypes['User'] | null; // User
    clientEmail: string | null; // String
    clientFamilyName: string | null; // String
    clientName: string | null; // String
    clientPhone: string | null; // String
    employee: NexusGenRootTypes['Employee']; // Employee!
    end: string; // String!
    id: string; // ID!
    services: NexusGenRootTypes['Service'][]; // [Service!]!
    start: string; // String!
    status: string; // String!
  }
  Branch: { // field return type
    address: string; // String!
    bookings: NexusGenRootTypes['Booking'][]; // [Booking!]!
    business: NexusGenRootTypes['Business']; // Business!
    categories: NexusGenRootTypes['Category'][]; // [Category!]!
    description: string; // String!
    email: string; // String!
    employees: NexusGenRootTypes['Employee'][]; // [Employee!]!
    id: string; // ID!
    image: string | null; // String
    name: string; // String!
    phone: string; // String!
    services: NexusGenRootTypes['Service'][]; // [Service!]!
  }
  Business: { // field return type
    branches: NexusGenRootTypes['Branch'][]; // [Branch!]!
    categories: NexusGenRootTypes['Category'][]; // [Category!]!
    email: string; // String!
    employee: NexusGenRootTypes['Employee'][]; // [Employee!]!
    facebookUrl: string | null; // String
    handle: string; // String!
    id: string; // ID!
    instagramUrl: string | null; // String
    landing: NexusGenRootTypes['LandingInfo'] | null; // LandingInfo
    name: string; // String!
    owner: NexusGenRootTypes['User']; // User!
    phone: string; // String!
    services: NexusGenRootTypes['Service'][]; // [Service!]!
    website: string | null; // String
  }
  BusinessImage: { // field return type
    id: string; // ID!
    landingInfo: NexusGenRootTypes['LandingInfo'] | null; // LandingInfo
    url: string; // String!
  }
  Category: { // field return type
    Business: NexusGenRootTypes['Business'] | null; // Business
    branches: NexusGenRootTypes['Branch'][]; // [Branch!]!
    id: string; // ID!
    name: string; // String!
  }
  Employee: { // field return type
    availability: NexusGenRootTypes['AvailabilityItem'][]; // [AvailabilityItem!]!
    availableTime: Array<NexusGenRootTypes['EmployeeAvailableTime'] | null> | null; // [EmployeeAvailableTime]
    bookings: NexusGenRootTypes['Booking'][]; // [Booking!]!
    branches: NexusGenRootTypes['Branch'][]; // [Branch!]!
    business: NexusGenRootTypes['Business']; // Business!
    familyName: string; // String!
    givenName: string; // String!
    id: string; // ID!
    phone: string; // String!
    services: NexusGenRootTypes['Service'][]; // [Service!]!
    user: NexusGenRootTypes['User'] | null; // User
    vacations: NexusGenRootTypes['VacationsItem'][]; // [VacationsItem!]!
  }
  EmployeeAvailableTime: { // field return type
    from: string | null; // String
    to: string | null; // String
  }
  EmployeesAvailableTime: { // field return type
    availability: Array<NexusGenRootTypes['EmployeeAvailableTime'] | null> | null; // [EmployeeAvailableTime]
    id: string | null; // String
  }
  LandingInfo: { // field return type
    business: NexusGenRootTypes['Business'] | null; // Business
    cta: string | null; // String
    description: string; // String!
    displayName: string; // String!
    id: string; // ID!
    images: NexusGenRootTypes['BusinessImage'][]; // [BusinessImage!]!
  }
  Mutation: { // field return type
    addCategoryToBusiness: NexusGenRootTypes['Business'] | null; // Business
    addImagesLandingInfo: NexusGenRootTypes['LandingInfo'] | null; // LandingInfo
    confirmUser: NexusGenRootTypes['AuthPayload'] | null; // AuthPayload
    createAvailabilityItem: NexusGenRootTypes['AvailabilityItem'] | null; // AvailabilityItem
    createBooking: NexusGenRootTypes['Booking'] | null; // Booking
    createBranch: NexusGenRootTypes['Branch'] | null; // Branch
    createBusiness: NexusGenRootTypes['Business'] | null; // Business
    createDraft: NexusGenRootTypes['Post'] | null; // Post
    createEmployee: NexusGenRootTypes['Employee'] | null; // Employee
    createLandingInfo: NexusGenRootTypes['LandingInfo'] | null; // LandingInfo
    createService: NexusGenRootTypes['Service'] | null; // Service
    createVacationsItem: NexusGenRootTypes['VacationsItem'] | null; // VacationsItem
    deleteBooking: NexusGenRootTypes['Booking'] | null; // Booking
    deleteBranch: NexusGenRootTypes['Branch'] | null; // Branch
    deleteLandingInfo: NexusGenRootTypes['LandingInfo'] | null; // LandingInfo
    deletePost: NexusGenRootTypes['Post'] | null; // Post
    login: NexusGenRootTypes['AuthPayload'] | null; // AuthPayload
    publish: NexusGenRootTypes['Post'] | null; // Post
    signup: NexusGenRootTypes['AuthPayload'] | null; // AuthPayload
    updateAvailabilityItem: NexusGenRootTypes['AvailabilityItem'] | null; // AvailabilityItem
    updateBooking: NexusGenRootTypes['Booking'] | null; // Booking
    updateBranch: NexusGenRootTypes['Branch'] | null; // Branch
    updateBusiness: NexusGenRootTypes['Business'] | null; // Business
    updateEmployee: NexusGenRootTypes['Employee'] | null; // Employee
    updateLandingInfo: NexusGenRootTypes['LandingInfo'] | null; // LandingInfo
    updateNotification: NexusGenRootTypes['Notification'] | null; // Notification
    updateService: NexusGenRootTypes['Service'] | null; // Service
    updateVacationsItem: NexusGenRootTypes['VacationsItem'] | null; // VacationsItem
  }
  Notification: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    seen: boolean; // Boolean!
    title: string; // String!
    type: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  Post: { // field return type
    author: NexusGenRootTypes['User'] | null; // User
    content: string | null; // String
    id: string; // ID!
    published: boolean; // Boolean!
    title: string; // String!
  }
  Query: { // field return type
    emailAvailability: boolean | null; // Boolean
    feed: Array<NexusGenRootTypes['Post'] | null> | null; // [Post]
    filterPosts: Array<NexusGenRootTypes['Post'] | null> | null; // [Post]
    getAvailabilityItem: NexusGenRootTypes['AvailabilityItem'] | null; // AvailabilityItem
    getAvailabilityItems: Array<NexusGenRootTypes['AvailabilityItem'] | null> | null; // [AvailabilityItem]
    getBooking: NexusGenRootTypes['Booking'] | null; // Booking
    getBookings: Array<NexusGenRootTypes['Booking'] | null> | null; // [Booking]
    getBookingsByBranch: Array<NexusGenRootTypes['Booking'] | null> | null; // [Booking]
    getBookingsByBusiness: Array<NexusGenRootTypes['Booking'] | null> | null; // [Booking]
    getBookingsByDate: Array<NexusGenRootTypes['Booking'] | null> | null; // [Booking]
    getBranch: NexusGenRootTypes['Branch'] | null; // Branch
    getBranches: Array<NexusGenRootTypes['Branch'] | null> | null; // [Branch]
    getBusiness: NexusGenRootTypes['Business'] | null; // Business
    getBusinessByHandle: NexusGenRootTypes['Business'] | null; // Business
    getBusinessEmployees: Array<NexusGenRootTypes['Employee'] | null> | null; // [Employee]
    getBusinesses: Array<NexusGenRootTypes['Business'] | null> | null; // [Business]
    getEmployee: NexusGenRootTypes['Employee'] | null; // Employee
    getEmployeeAvailableDays: Array<string | null> | null; // [String]
    getEmployeeAvailableTime: Array<NexusGenRootTypes['EmployeeAvailableTime'] | null> | null; // [EmployeeAvailableTime]
    getEmployees: Array<NexusGenRootTypes['Employee'] | null> | null; // [Employee]
    getEmployeesAvailableTime: Array<NexusGenRootTypes['EmployeesAvailableTime'] | null> | null; // [EmployeesAvailableTime]
    getService: NexusGenRootTypes['Service'] | null; // Service
    getServices: Array<NexusGenRootTypes['Service'] | null> | null; // [Service]
    getVacationsItem: NexusGenRootTypes['VacationsItem'] | null; // VacationsItem
    getVacationsItems: Array<NexusGenRootTypes['VacationsItem'] | null> | null; // [VacationsItem]
    me: NexusGenRootTypes['User'] | null; // User
    post: NexusGenRootTypes['Post'] | null; // Post
  }
  Service: { // field return type
    bookings: NexusGenRootTypes['Booking'][]; // [Booking!]!
    branches: NexusGenRootTypes['Branch'][]; // [Branch!]!
    category: NexusGenRootTypes['Category'] | null; // Category
    currency: string; // String!
    description: string; // String!
    duration: number; // Int!
    employees: NexusGenRootTypes['Employee'][]; // [Employee!]!
    id: string; // ID!
    name: string; // String!
    price: number; // Float!
  }
  Subscription: { // field return type
    deletedBooking: NexusGenRootTypes['Booking'] | null; // Booking
    newBooking: NexusGenRootTypes['Booking'] | null; // Booking
    updatedBooking: NexusGenRootTypes['Booking'] | null; // Booking
  }
  User: { // field return type
    bookings: NexusGenRootTypes['Booking'][]; // [Booking!]!
    business: NexusGenRootTypes['Business'] | null; // Business
    email: string; // String!
    familyName: string; // String!
    givenName: string; // String!
    id: string; // ID!
    name: string | null; // String
    notifications: Array<NexusGenRootTypes['Notification'] | null> | null; // [Notification]
    phone: string | null; // String
    posts: NexusGenRootTypes['Post'][]; // [Post!]!
    userType: string; // String!
    verifyToken: string; // String!
  }
  VacationsItem: { // field return type
    employee: NexusGenRootTypes['Employee']; // Employee!
    from: string; // String!
    id: string; // ID!
    to: string; // String!
  }
}

export interface NexusGenFieldTypeNames {
  AuthPayload: { // field return type name
    token: 'String'
    user: 'User'
  }
  AvailabilityItem: { // field return type name
    day: 'String'
    employee: 'Employee'
    from: 'String'
    id: 'ID'
    to: 'String'
  }
  Booking: { // field return type name
    branch: 'Branch'
    client: 'User'
    clientEmail: 'String'
    clientFamilyName: 'String'
    clientName: 'String'
    clientPhone: 'String'
    employee: 'Employee'
    end: 'String'
    id: 'ID'
    services: 'Service'
    start: 'String'
    status: 'String'
  }
  Branch: { // field return type name
    address: 'String'
    bookings: 'Booking'
    business: 'Business'
    categories: 'Category'
    description: 'String'
    email: 'String'
    employees: 'Employee'
    id: 'ID'
    image: 'String'
    name: 'String'
    phone: 'String'
    services: 'Service'
  }
  Business: { // field return type name
    branches: 'Branch'
    categories: 'Category'
    email: 'String'
    employee: 'Employee'
    facebookUrl: 'String'
    handle: 'String'
    id: 'ID'
    instagramUrl: 'String'
    landing: 'LandingInfo'
    name: 'String'
    owner: 'User'
    phone: 'String'
    services: 'Service'
    website: 'String'
  }
  BusinessImage: { // field return type name
    id: 'ID'
    landingInfo: 'LandingInfo'
    url: 'String'
  }
  Category: { // field return type name
    Business: 'Business'
    branches: 'Branch'
    id: 'ID'
    name: 'String'
  }
  Employee: { // field return type name
    availability: 'AvailabilityItem'
    availableTime: 'EmployeeAvailableTime'
    bookings: 'Booking'
    branches: 'Branch'
    business: 'Business'
    familyName: 'String'
    givenName: 'String'
    id: 'ID'
    phone: 'String'
    services: 'Service'
    user: 'User'
    vacations: 'VacationsItem'
  }
  EmployeeAvailableTime: { // field return type name
    from: 'String'
    to: 'String'
  }
  EmployeesAvailableTime: { // field return type name
    availability: 'EmployeeAvailableTime'
    id: 'String'
  }
  LandingInfo: { // field return type name
    business: 'Business'
    cta: 'String'
    description: 'String'
    displayName: 'String'
    id: 'ID'
    images: 'BusinessImage'
  }
  Mutation: { // field return type name
    addCategoryToBusiness: 'Business'
    addImagesLandingInfo: 'LandingInfo'
    confirmUser: 'AuthPayload'
    createAvailabilityItem: 'AvailabilityItem'
    createBooking: 'Booking'
    createBranch: 'Branch'
    createBusiness: 'Business'
    createDraft: 'Post'
    createEmployee: 'Employee'
    createLandingInfo: 'LandingInfo'
    createService: 'Service'
    createVacationsItem: 'VacationsItem'
    deleteBooking: 'Booking'
    deleteBranch: 'Branch'
    deleteLandingInfo: 'LandingInfo'
    deletePost: 'Post'
    login: 'AuthPayload'
    publish: 'Post'
    signup: 'AuthPayload'
    updateAvailabilityItem: 'AvailabilityItem'
    updateBooking: 'Booking'
    updateBranch: 'Branch'
    updateBusiness: 'Business'
    updateEmployee: 'Employee'
    updateLandingInfo: 'LandingInfo'
    updateNotification: 'Notification'
    updateService: 'Service'
    updateVacationsItem: 'VacationsItem'
  }
  Notification: { // field return type name
    createdAt: 'DateTime'
    id: 'ID'
    seen: 'Boolean'
    title: 'String'
    type: 'String'
    user: 'User'
  }
  Post: { // field return type name
    author: 'User'
    content: 'String'
    id: 'ID'
    published: 'Boolean'
    title: 'String'
  }
  Query: { // field return type name
    emailAvailability: 'Boolean'
    feed: 'Post'
    filterPosts: 'Post'
    getAvailabilityItem: 'AvailabilityItem'
    getAvailabilityItems: 'AvailabilityItem'
    getBooking: 'Booking'
    getBookings: 'Booking'
    getBookingsByBranch: 'Booking'
    getBookingsByBusiness: 'Booking'
    getBookingsByDate: 'Booking'
    getBranch: 'Branch'
    getBranches: 'Branch'
    getBusiness: 'Business'
    getBusinessByHandle: 'Business'
    getBusinessEmployees: 'Employee'
    getBusinesses: 'Business'
    getEmployee: 'Employee'
    getEmployeeAvailableDays: 'String'
    getEmployeeAvailableTime: 'EmployeeAvailableTime'
    getEmployees: 'Employee'
    getEmployeesAvailableTime: 'EmployeesAvailableTime'
    getService: 'Service'
    getServices: 'Service'
    getVacationsItem: 'VacationsItem'
    getVacationsItems: 'VacationsItem'
    me: 'User'
    post: 'Post'
  }
  Service: { // field return type name
    bookings: 'Booking'
    branches: 'Branch'
    category: 'Category'
    currency: 'String'
    description: 'String'
    duration: 'Int'
    employees: 'Employee'
    id: 'ID'
    name: 'String'
    price: 'Float'
  }
  Subscription: { // field return type name
    deletedBooking: 'Booking'
    newBooking: 'Booking'
    updatedBooking: 'Booking'
  }
  User: { // field return type name
    bookings: 'Booking'
    business: 'Business'
    email: 'String'
    familyName: 'String'
    givenName: 'String'
    id: 'ID'
    name: 'String'
    notifications: 'Notification'
    phone: 'String'
    posts: 'Post'
    userType: 'String'
    verifyToken: 'String'
  }
  VacationsItem: { // field return type name
    employee: 'Employee'
    from: 'String'
    id: 'ID'
    to: 'String'
  }
}

export interface NexusGenArgTypes {
  Employee: {
    availableTime: { // args
      date?: string | null; // String
      duration?: number | null; // Int
    }
  }
  Mutation: {
    addCategoryToBusiness: { // args
      businessId?: string | null; // ID
      categories?: Array<string | null> | null; // [String]
    }
    addImagesLandingInfo: { // args
      imagesUrl?: Array<string | null> | null; // [String]
      landingInfoId?: string | null; // ID
    }
    confirmUser: { // args
      email?: string | null; // String
      verifyToken?: string | null; // String
    }
    createAvailabilityItem: { // args
      day: string; // String!
      employeeId: string; // String!
      from: string; // String!
      to: string; // String!
    }
    createBooking: { // args
      branchId: string; // String!
      clientEmail?: string | null; // String
      clientFamilyName?: string | null; // String
      clientId?: string | null; // String
      clientName?: string | null; // String
      clientPhone?: string | null; // String
      employeeId: string; // String!
      end: string; // String!
      servicesId: string[]; // [String!]!
      start: string; // String!
      status?: string | null; // String
    }
    createBranch: { // args
      address: string; // String!
      description: string; // String!
      email: string; // String!
      image?: string | null; // String
      name: string; // String!
      phone: string; // String!
    }
    createBusiness: { // args
      categories?: Array<string | null> | null; // [String]
      email: string; // String!
      facebookUrl?: string | null; // String
      handle: string; // String!
      instagramUrl?: string | null; // String
      name: string; // String!
      phone: string; // String!
      website?: string | null; // String
    }
    createDraft: { // args
      content?: string | null; // String
      title?: string | null; // String
    }
    createEmployee: { // args
      branchesId?: Array<string | null> | null; // [String]
      businessId: string; // String!
      familyName: string; // String!
      givenName: string; // String!
      phone: string; // String!
      servicesId?: Array<string | null> | null; // [String]
      userId?: string | null; // String
    }
    createLandingInfo: { // args
      businessId: string; // ID!
      cta?: string | null; // String
      description: string; // String!
      displayName: string; // String!
      imagesUrl: string[]; // [String!]!
    }
    createService: { // args
      branchesId: string[]; // [String!]!
      currency: string; // String!
      description: string; // String!
      duration: number; // Int!
      name: string; // String!
      price: number; // Float!
    }
    createVacationsItem: { // args
      employeeId: string; // String!
      from: string; // String!
      to: string; // String!
    }
    deleteBooking: { // args
      id: string; // ID!
    }
    deleteBranch: { // args
      id: string; // ID!
    }
    deleteLandingInfo: { // args
      id?: string | null; // ID
    }
    deletePost: { // args
      id?: string | null; // ID
    }
    login: { // args
      email?: string | null; // String
      password?: string | null; // String
      phone?: string | null; // String
    }
    publish: { // args
      id?: string | null; // ID
    }
    signup: { // args
      email?: string | null; // String
      familyName?: string | null; // String
      givenName?: string | null; // String
      name?: string | null; // String
      password?: string | null; // String
      phone?: string | null; // String
      userName?: string | null; // String
      userType?: string | null; // String
    }
    updateAvailabilityItem: { // args
      day?: string | null; // String
      from?: string | null; // String
      id: string; // ID!
      to?: string | null; // String
    }
    updateBooking: { // args
      branchId?: string | null; // String
      clientEmail?: string | null; // String
      clientFamilyName?: string | null; // String
      clientId?: string | null; // String
      clientName?: string | null; // String
      clientPhone?: string | null; // String
      employeeId?: string | null; // String
      end?: string | null; // String
      id: string; // ID!
      servicesId?: Array<string | null> | null; // [String]
      start?: string | null; // String
      status?: string | null; // String
    }
    updateBranch: { // args
      address?: string | null; // String
      categoriesId?: Array<string | null> | null; // [String]
      description?: string | null; // String
      email?: string | null; // String
      id: string; // ID!
      image?: string | null; // String
      name?: string | null; // String
      phone?: string | null; // String
      servicesId?: Array<string | null> | null; // [String]
    }
    updateBusiness: { // args
      email?: string | null; // String
      facebookUrl?: string | null; // String
      handle?: string | null; // String
      id: string; // ID!
      instagramUrl?: string | null; // String
      name?: string | null; // String
      phone?: string | null; // String
      website?: string | null; // String
    }
    updateEmployee: { // args
      branchesId?: Array<string | null> | null; // [String]
      familyName?: string | null; // String
      givenName?: string | null; // String
      id: string; // ID!
      phone?: string | null; // String
      servicesId?: Array<string | null> | null; // [String]
      userId?: string | null; // String
    }
    updateLandingInfo: { // args
      cta?: string | null; // String
      description?: string | null; // String
      displayName?: string | null; // String
      id: string; // ID!
    }
    updateNotification: { // args
      id: string; // ID!
      seen: boolean; // Boolean!
    }
    updateService: { // args
      currency?: string | null; // String
      description?: string | null; // String
      duration?: number | null; // Int
      id: string; // String!
      name?: string | null; // String
      price?: number | null; // Float
    }
    updateVacationsItem: { // args
      employeeId?: string | null; // String
      from?: string | null; // String
      id: string; // ID!
      to?: string | null; // String
    }
  }
  Query: {
    emailAvailability: { // args
      email?: string | null; // String
    }
    filterPosts: { // args
      searchString?: string | null; // String
    }
    getAvailabilityItem: { // args
      id?: string | null; // ID
    }
    getBooking: { // args
      id?: string | null; // String
    }
    getBookings: { // args
      where?: NexusGenInputs['BookingsWhereInputType'] | null; // BookingsWhereInputType
    }
    getBookingsByBranch: { // args
      branchId?: string | null; // String
    }
    getBookingsByBusiness: { // args
      id?: string | null; // String
    }
    getBookingsByDate: { // args
      branchId?: string | null; // String
      employeeId?: string | null; // String
      endDate: string; // String!
      startDate: string; // String!
    }
    getBranch: { // args
      id?: string | null; // String
    }
    getBusiness: { // args
      id?: string | null; // String
    }
    getBusinessByHandle: { // args
      handle?: string | null; // String
    }
    getBusinessEmployees: { // args
      id?: string | null; // ID
    }
    getEmployee: { // args
      id?: string | null; // String
    }
    getEmployeeAvailableDays: { // args
      employeeId?: string | null; // ID
      endDate?: string | null; // String
      startDate?: string | null; // String
    }
    getEmployeeAvailableTime: { // args
      date?: string | null; // String
      duration?: number | null; // Int
      id?: string | null; // ID
    }
    getEmployeesAvailableTime: { // args
      date?: string | null; // String
      duration?: number | null; // Int
      ids?: Array<string | null> | null; // [ID]
    }
    getService: { // args
      id?: string | null; // String
    }
    getVacationsItem: { // args
      id?: string | null; // ID
    }
    post: { // args
      id?: string | null; // ID
    }
  }
  Subscription: {
    deletedBooking: { // args
      branchId?: string | null; // String
    }
    newBooking: { // args
      branchId?: string | null; // String
    }
    updatedBooking: { // args
      branchId?: string | null; // String
    }
  }
  User: {
    notifications: { // args
      after?: string | null; // String
      take?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
    /**
     * Whether the type can be null
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    nullable?: boolean
    /**
     * Whether the type is list of values, or just a single value.
     * If list is true, we assume the type is a list. If list is an array,
     * we'll assume that it's a list with the depth. The boolean indicates whether
     * the type is required (non-null), where true = nonNull, false = nullable.
     * @see declarativeWrappingPlugin
     */
    list?: true | boolean[]
    /**
     * Whether the type should be non null, `required: true` = `nullable: false`
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    required?: boolean
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
    /**
     * Whether the type can be null
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    nullable?: boolean
    /**
     * Whether the type is list of values, or just a single value.
     * If list is true, we assume the type is a list. If list is an array,
     * we'll assume that it's a list with the depth. The boolean indicates whether
     * the type is required (non-null), where true = nonNull, false = nullable.
     * @see declarativeWrappingPlugin
     */
    list?: true | boolean[]
    /**
     * Whether the type should be non null, `required: true` = `nullable: false`
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    required?: boolean
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
    /**
     * Whether the type can be null
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    nullable?: boolean
    /**
     * Whether the type is list of values, or just a single value.
     * If list is true, we assume the type is a list. If list is an array,
     * we'll assume that it's a list with the depth. The boolean indicates whether
     * the type is required (non-null), where true = nonNull, false = nullable.
     * @see declarativeWrappingPlugin
     */
    list?: true | boolean[]
    /**
     * Whether the type should be non null, `required: true` = `nullable: false`
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    required?: boolean
  }
}