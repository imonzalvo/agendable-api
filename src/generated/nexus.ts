/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */





declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
  BookingStatus: "CANCELLED" | "COMPLETED" | "CONFIRMED" | "PENDING"
  Day: "FRIDAY" | "MONDAY" | "SATURDAY" | "SUNDAY" | "THURSDAY" | "TUESDAY" | "WEDNESDAY"
  UserType: "ADMIN" | "GUEST" | "USER"
}

export interface NexusGenRootTypes {
  AuthPayload: { // root type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  AvailabilityItem: { // root type
    day: NexusGenEnums['Day']; // Day!
    from: string; // String!
    id: number; // Int!
    to: string; // String!
  }
  Booking: { // root type
    clientEmail?: string | null; // String
    clientFamilyName?: string | null; // String
    clientName?: string | null; // String
    clientPhone?: string | null; // String
    end: string; // String!
    id: number; // Int!
    start: string; // String!
    status: NexusGenEnums['BookingStatus']; // BookingStatus!
  }
  Branch: { // root type
    address: string; // String!
    description: string; // String!
    email: string; // String!
    id: number; // Int!
    image?: string | null; // String
    name: string; // String!
    phone: string; // String!
  }
  Business: { // root type
    email: string; // String!
    handle: string; // String!
    id: number; // Int!
    name: string; // String!
    phone: string; // String!
  }
  Employee: { // root type
    familyName: string; // String!
    givenName: string; // String!
    id: number; // Int!
    phone: string; // String!
  }
  Mutation: {};
  Post: { // root type
    content?: string | null; // String
    id: number; // Int!
    published: boolean; // Boolean!
    title: string; // String!
  }
  Query: {};
  Service: { // root type
    currency: string; // String!
    description: string; // String!
    duration: number; // Int!
    id: number; // Int!
    name: string; // String!
    price: number; // Float!
  }
  User: { // root type
    email: string; // String!
    familyName: string; // String!
    givenName: string; // String!
    id: number; // Int!
    name?: string | null; // String
    userType: NexusGenEnums['UserType']; // UserType!
  }
  VacationsItem: { // root type
    from: string; // String!
    id: number; // Int!
    to: string; // String!
  }
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  BookingStatus: NexusGenEnums['BookingStatus'];
  Day: NexusGenEnums['Day'];
  UserType: NexusGenEnums['UserType'];
}

export interface NexusGenFieldTypes {
  AuthPayload: { // field return type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  AvailabilityItem: { // field return type
    day: NexusGenEnums['Day']; // Day!
    employee: NexusGenRootTypes['Employee']; // Employee!
    from: string; // String!
    id: number; // Int!
    to: string; // String!
  }
  Booking: { // field return type
    branch: NexusGenRootTypes['Branch']; // Branch!
    client: NexusGenRootTypes['User'] | null; // User
    clientEmail: string | null; // String
    clientFamilyName: string | null; // String
    clientName: string | null; // String
    clientPhone: string | null; // String
    employee: NexusGenRootTypes['Employee']; // Employee!
    end: string; // String!
    id: number; // Int!
    services: NexusGenRootTypes['Service'][]; // [Service!]!
    start: string; // String!
    status: NexusGenEnums['BookingStatus']; // BookingStatus!
  }
  Branch: { // field return type
    address: string; // String!
    bookings: NexusGenRootTypes['Booking'][]; // [Booking!]!
    business: NexusGenRootTypes['Business']; // Business!
    description: string; // String!
    email: string; // String!
    employees: NexusGenRootTypes['Employee'][]; // [Employee!]!
    id: number; // Int!
    image: string | null; // String
    name: string; // String!
    phone: string; // String!
    services: NexusGenRootTypes['Service'][]; // [Service!]!
  }
  Business: { // field return type
    branches: NexusGenRootTypes['Branch'][]; // [Branch!]!
    email: string; // String!
    handle: string; // String!
    id: number; // Int!
    name: string; // String!
    owner: NexusGenRootTypes['User']; // User!
    phone: string; // String!
  }
  Employee: { // field return type
    bookings: NexusGenRootTypes['Booking'][]; // [Booking!]!
    branches: NexusGenRootTypes['Branch'][]; // [Branch!]!
    familyName: string; // String!
    givenName: string; // String!
    id: number; // Int!
    phone: string; // String!
    services: NexusGenRootTypes['Service'][]; // [Service!]!
    user: NexusGenRootTypes['User'] | null; // User
  }
  Mutation: { // field return type
    createAvailabilityItem: NexusGenRootTypes['AvailabilityItem']; // AvailabilityItem!
    createBooking: NexusGenRootTypes['Booking']; // Booking!
    createBranch: NexusGenRootTypes['Branch']; // Branch!
    createBusiness: NexusGenRootTypes['Business']; // Business!
    createDraft: NexusGenRootTypes['Post']; // Post!
    createEmployee: NexusGenRootTypes['Employee']; // Employee!
    createService: NexusGenRootTypes['Service']; // Service!
    createVacationsItem: NexusGenRootTypes['VacationsItem']; // VacationsItem!
    deletePost: NexusGenRootTypes['Post'] | null; // Post
    login: NexusGenRootTypes['AuthPayload']; // AuthPayload!
    publish: NexusGenRootTypes['Post'] | null; // Post
    signup: NexusGenRootTypes['AuthPayload']; // AuthPayload!
    updateAvailabilityItem: NexusGenRootTypes['AvailabilityItem']; // AvailabilityItem!
    updateBooking: NexusGenRootTypes['Booking']; // Booking!
    updateBranch: NexusGenRootTypes['Branch']; // Branch!
    updateBusiness: NexusGenRootTypes['Business']; // Business!
    updateEmployee: NexusGenRootTypes['Employee']; // Employee!
    updateVacationsItem: NexusGenRootTypes['VacationsItem']; // VacationsItem!
  }
  Post: { // field return type
    author: NexusGenRootTypes['User'] | null; // User
    content: string | null; // String
    id: number; // Int!
    published: boolean; // Boolean!
    title: string; // String!
  }
  Query: { // field return type
    feed: NexusGenRootTypes['Post'][]; // [Post!]!
    filterPosts: NexusGenRootTypes['Post'][]; // [Post!]!
    getAvailabilityItem: NexusGenRootTypes['AvailabilityItem'] | null; // AvailabilityItem
    getAvailabilityItems: NexusGenRootTypes['AvailabilityItem'][] | null; // [AvailabilityItem!]
    getBooking: NexusGenRootTypes['Booking'] | null; // Booking
    getBookings: NexusGenRootTypes['Booking'][] | null; // [Booking!]
    getBookingsByBranch: NexusGenRootTypes['Booking'][] | null; // [Booking!]
    getBookingsByBusiness: NexusGenRootTypes['Booking'][] | null; // [Booking!]
    getBranch: NexusGenRootTypes['Branch'] | null; // Branch
    getBranches: NexusGenRootTypes['Branch'][] | null; // [Branch!]
    getBusiness: NexusGenRootTypes['Business'] | null; // Business
    getBusinesses: NexusGenRootTypes['Business'][] | null; // [Business!]
    getEmployee: NexusGenRootTypes['Employee'] | null; // Employee
    getEmployees: NexusGenRootTypes['Employee'][] | null; // [Employee!]
    getService: NexusGenRootTypes['Service'] | null; // Service
    getServices: NexusGenRootTypes['Service'][] | null; // [Service!]
    getVacationsItem: NexusGenRootTypes['VacationsItem'] | null; // VacationsItem
    getVacationsItems: NexusGenRootTypes['VacationsItem'][] | null; // [VacationsItem!]
    me: NexusGenRootTypes['User'] | null; // User
    post: NexusGenRootTypes['Post'] | null; // Post
  }
  Service: { // field return type
    bookings: NexusGenRootTypes['Booking'][]; // [Booking!]!
    branches: NexusGenRootTypes['Branch'][]; // [Branch!]!
    currency: string; // String!
    description: string; // String!
    duration: number; // Int!
    employees: NexusGenRootTypes['Employee'][]; // [Employee!]!
    id: number; // Int!
    name: string; // String!
    price: number; // Float!
  }
  User: { // field return type
    bookings: NexusGenRootTypes['Booking'][]; // [Booking!]!
    business: NexusGenRootTypes['Business'] | null; // Business
    email: string; // String!
    familyName: string; // String!
    givenName: string; // String!
    id: number; // Int!
    name: string | null; // String
    posts: NexusGenRootTypes['Post'][]; // [Post!]!
    userType: NexusGenEnums['UserType']; // UserType!
  }
  VacationsItem: { // field return type
    employee: NexusGenRootTypes['Employee']; // Employee!
    from: string; // String!
    id: number; // Int!
    to: string; // String!
  }
}

export interface NexusGenArgTypes {
  Booking: {
    services: { // args
      skip?: number | null; // Int
    }
  }
  Branch: {
    bookings: { // args
      skip?: number | null; // Int
    }
    employees: { // args
      skip?: number | null; // Int
    }
    services: { // args
      skip?: number | null; // Int
    }
  }
  Business: {
    branches: { // args
      skip?: number | null; // Int
    }
  }
  Employee: {
    bookings: { // args
      skip?: number | null; // Int
    }
    branches: { // args
      skip?: number | null; // Int
    }
    services: { // args
      skip?: number | null; // Int
    }
  }
  Mutation: {
    createAvailabilityItem: { // args
      day?: string | null; // String
      employeeId?: number | null; // Int
      from?: string | null; // String
      to?: string | null; // String
    }
    createBooking: { // args
      branchId: number; // Int!
      clientEmail?: string | null; // String
      clientFamilyName?: string | null; // String
      clientId?: number | null; // Int
      clientName?: string | null; // String
      clientPhone?: string | null; // String
      employeeId: number; // Int!
      end?: string | null; // String
      servicesId: number[]; // [Int!]!
      start?: string | null; // String
      status?: string | null; // String
    }
    createBranch: { // args
      address?: string | null; // String
      description?: string | null; // String
      email?: string | null; // String
      image?: string | null; // String
      name?: string | null; // String
      phone?: string | null; // String
    }
    createBusiness: { // args
      email?: string | null; // String
      handle?: string | null; // String
      name?: string | null; // String
      phone?: string | null; // String
    }
    createDraft: { // args
      content?: string | null; // String
      title?: string | null; // String
    }
    createEmployee: { // args
      branchesId?: number[] | null; // [Int!]
      familyName?: string | null; // String
      givenName?: string | null; // String
      phone?: string | null; // String
      servicesId?: number[] | null; // [Int!]
      userId?: number | null; // Int
    }
    createService: { // args
      branchesId: number[]; // [Int!]!
      currency?: string | null; // String
      description?: string | null; // String
      duration?: number | null; // Int
      name?: string | null; // String
      price?: number | null; // Float
    }
    createVacationsItem: { // args
      employeeId?: number | null; // Int
      from?: string | null; // String
      to?: string | null; // String
    }
    deletePost: { // args
      id?: string | null; // ID
    }
    login: { // args
      email?: string | null; // String
      password?: string | null; // String
    }
    publish: { // args
      id?: string | null; // ID
    }
    signup: { // args
      email?: string | null; // String
      familyName?: string | null; // String
      givenName?: string | null; // String
      name?: string | null; // String
      password?: string | null; // String
      userName?: string | null; // String
      userType?: string | null; // String
    }
    updateAvailabilityItem: { // args
      day?: string | null; // String
      from?: string | null; // String
      id?: string | null; // ID
      to?: string | null; // String
    }
    updateBooking: { // args
      branchId?: number | null; // Int
      clientEmail?: string | null; // String
      clientFamilyName?: string | null; // String
      clientId?: number | null; // Int
      clientName?: string | null; // String
      clientPhone?: string | null; // String
      employeeId?: number | null; // Int
      end?: string | null; // String
      id?: string | null; // ID
      servicesId?: number[] | null; // [Int!]
      start?: string | null; // String
      status?: string | null; // String
    }
    updateBranch: { // args
      address?: string | null; // String
      description?: string | null; // String
      email?: string | null; // String
      id?: string | null; // ID
      image?: string | null; // String
      name?: string | null; // String
      phone?: string | null; // String
      servicesId?: number[] | null; // [Int!]
    }
    updateBusiness: { // args
      email?: string | null; // String
      handle?: string | null; // String
      id?: string | null; // ID
      name?: string | null; // String
      phone?: string | null; // String
    }
    updateEmployee: { // args
      branchesId?: number[] | null; // [Int!]
      familyName?: string | null; // String
      givenName?: string | null; // String
      id?: string | null; // ID
      phone?: string | null; // String
      servicesId?: number[] | null; // [Int!]
      userId?: number | null; // Int
    }
    updateVacationsItem: { // args
      employeeId?: number | null; // Int
      from?: string | null; // String
      id?: string | null; // ID
      to?: string | null; // String
    }
  }
  Query: {
    filterPosts: { // args
      searchString?: string | null; // String
    }
    getAvailabilityItem: { // args
      id?: string | null; // ID
    }
    getBooking: { // args
      id?: number | null; // Int
    }
    getBookingsByBranch: { // args
      branchId?: number | null; // Int
    }
    getBookingsByBusiness: { // args
      businessId?: number | null; // Int
    }
    getBranch: { // args
      id?: number | null; // Int
    }
    getBusiness: { // args
      id?: number | null; // Int
    }
    getEmployee: { // args
      id?: number | null; // Int
    }
    getService: { // args
      id?: number | null; // Int
    }
    getVacationsItem: { // args
      id?: string | null; // ID
    }
    post: { // args
      id?: string | null; // ID
    }
  }
  Service: {
    bookings: { // args
      skip?: number | null; // Int
    }
    branches: { // args
      skip?: number | null; // Int
    }
    employees: { // args
      skip?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "AuthPayload" | "AvailabilityItem" | "Booking" | "Branch" | "Business" | "Employee" | "Mutation" | "Post" | "Query" | "Service" | "User" | "VacationsItem";

export type NexusGenInputNames = never;

export type NexusGenEnumNames = "BookingStatus" | "Day" | "UserType";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}